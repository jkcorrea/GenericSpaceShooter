//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using UnityEngine;

public class AIControllerCircle : AIController {

	public float Radius = 3f;
	public float Velocity = 4f;

	Vector2 center;

	override
	protected void Start() {
		base.Start ();
		center = new Vector2(transform.position.x, transform.position.y);
		transform.position = new Vector3(transform.position.x - Radius, transform.position.y, transform.position.z);
		ship.rigidbody.AddForce(new Vector3(0f, Velocity, 0f), ForceMode.VelocityChange);
		ship.SetInitialAcceleration(Vector3.zero);
	}

	override
	protected void Update() {
		base.Update();
		Vector3 direction = new Vector3(-(center.y - transform.position.y), center.x - transform.position.x, 0f).normalized;
		Debug.Log (direction);
		ship.rigidbody.velocity = direction*Velocity + Vector3.forward*ship.rigidbody.velocity.z;
//		ship.Accelerate(getAcceleration());
		ship.weapon.Face(target, accuracy);
		Fire ();
	}

	Vector3 getAcceleration() {
		float magnitude = Velocity*Velocity/Radius;
		Vector3 direction = new Vector3(center.x - transform.position.x, center.y - transform.position.y, 0f).normalized;
//		Debug.Log (direction);
//		Debug.Log (magnitude*direction);
		return magnitude*direction;
	}

	override
	protected void SetModifiers(int level) {
		Velocity = 4f + 2*level;
		accuracy = 10f + 5*level;
	}

}

